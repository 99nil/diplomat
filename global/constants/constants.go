// Copyright Â© 2022 99nil.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package constants

const (
	ProjectName   = "diplomat"
	ProjectDomain = ProjectName + ".99nil.com"

	DefaultNamespace         = "diplomat"
	SystemNamespace          = "kubeedge"
	RavenControllerNamespace = "kube-system"
)

const (
	AnnotationRelateClusterRole = ProjectDomain + "/clusterrole"
	AnnotationRelateRole        = ProjectDomain + "/role"
)

const (
	CNIBinPath      = "/opt/cni/bin"
	RootDir         = "/etc/diplomat"
	ResourceDir     = "/var/lib/diplomat"
	ExecDir         = "/usr/local/bin"
	LogDir          = "/var/log/diplomat"
	TmpPath         = "/tmp/diplomat"
	ConfigDir       = RootDir + "/config"
	DefaultCertPath = RootDir + "/certs"
	UsrBinPath      = "/usr/local/bin"
)

const (
	ComponentCloudStream = "CloudStream"
)

// use to show token for edge node join cloud
const (
	TokenSecretName = "tokensecret"
	TokenDataName   = "tokendata"
)

const (
	KindService    = "Service"
	KindConfigMap  = "ConfigMap"
	KindDeployment = "Deployment"
	KindDaemonSet  = "DaemonSet"
)

const (
	CloudComponent = "cloudcore"
	EdgeComponent  = "edgecore"
)

const DockerContainerRuntime = "docker"

// config field name
const (
	// CGroupDriver is type of edgecore Cgroup
	CGroupDriver = "cgroupdriver"

	// CertPath sets the path of the certificates generated by the KubeEdge Cloud component
	CertPath = "certPath"

	// CloudCoreIPPort sets the IP and port of KubeEdge cloud component
	CloudCoreIPPort = "cloudcore-ipport"

	// EdgeNodeName is KubeEdge node unique identification string
	EdgeNodeName = "edgenode-name"

	// Token sets the token used when edge applying for the certificate
	Token = "token"

	Labels = "labels"

	// RuntimeType is default runtime type
	RuntimeType = "runtimetype"

	// RemoteRuntimeEndpoint is KubeEdge remote-runtime-endpoint string
	RemoteRuntimeEndpoint = "remote-runtime-endpoint"

	// CertPort is the port where to apply for the edge certificate
	CertPort = "certport"

	// ImageRepository sets the image repository to pull images
	ImageRepository = "image-repository"
)

// edge config

type ProtocolName string
type MqttMode int

const (
	MQTTName = "mqtt"
)

const (
	MqttModeInternal MqttMode = 0
	MqttModeBoth     MqttMode = 1
	MqttModeExternal MqttMode = 2
)

const (
	CGroupDriverCGroupFS = "cgroupfs"
	CGroupDriverSystemd  = "systemd"
)

const (
	// DataBaseDriverName is sqlite3
	DataBaseDriverName = "sqlite3"
	// DataBaseAliasName is default
	DataBaseAliasName = "default"
	// DataBaseDataSource is edge.db
	DataBaseDataSource = "edgecore.db"
)
